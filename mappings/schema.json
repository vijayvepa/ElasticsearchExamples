{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "properties": {
      "type": "object",
      "patternProperties": {
        "^.*$": {
			"$ref":"#/definitions/esprop"
		}
      }
    }
  },
  "definitions": {
	  "esprop":{
		  "type":"object",
		  "properties": {
        "term_vector": {
          "type": "string",
          "description": "Whether to store the information of the terms generated by the analyzer. ",
          "examples": [
            "no",
            "yes",
            "with_positions",
            "with_offsets",
            "with_positions_offset"
          ]
        },
        "store": {
          "type": "boolean",
          "description": "Whether to store the field value.",
          "examples": [true, false]
        },
        "type": {
          "type": "string",
          "examples": [
            "text",
            "keyword",
            "long",
            "integer",
            "short",
            "byte",
            "double",
            "float",
            "half_float",
            "scaled_float",
            "date",
            "date_nanos",
            "boolean",
            "integer",
            "ip",
            "alias",
            "binary",
            "long_range",
            "date_range",
            "ip_range",
            "geo-point",
            "geo-shape",
            "nested",
            ""
          ]
        },
        "properties": {
          "type": "object",
          "patternProperties": {
            "^.*$": {
              "$ref": "#/definitions/esprop"
            }
          }
        },
        "doc_values": {
          "type": "boolean",
          "description": "It stores the same values as `_source`, but in a column-oriented manner. It is designed for sorting and aggregations. The default value is `true`.",
          "examples": [false, true]
        },
        "norm": {
          "type": "boolean",
          "description": "Whether to store the various normalization factors for scoring in query.",
          "examples": [true, false]
        },
        "index": {
          "type": "boolean",
          "description": "Whether to index the field value. ",
          "examples": [true, false]
        },
        "index_option": {
          "type": "string",
          "description": "Options in indexing to provide features in search and highlighting. ",
          "examples": ["docs", "freqs", "positions", "offsets"]
        },
        "index_phrases": {
          "type": "boolean",
          "description": "Whether to provide faster phrase searches in text. ",
          "examples": [false, true]
        },
        "dynamic": {
          "type": "boolean",
          "description": "Whether new fields will be indexed dynamically. Options are true, false, and strict. The default value is true. The false option will ignore the new field. The strict option will throw an exception.",
          "examples": [false, true, "strict"]
        },
        "index_prefixes": {
          "type": "object",
          "description": "Enables faster prefix searches on text. The default action is disabled.",
          "properties": {
            "min_chars": {
              "type": "integer",
              "examples": [1]
            },
            "max_chars": {
              "type": "integer",
              "examples": [5]
            }
          }
        }
      }
	  }
  }
}
