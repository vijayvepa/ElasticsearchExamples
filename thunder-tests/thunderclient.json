[
  {
    "_id": "501b9da1-40f7-4b50-8f0a-2c9c098c26fe",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "CreateIndexValid",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-07-31T11:41:15.460Z",
    "modified": "2022-07-31T11:41:15.460Z",
    "headers": []
  },
  {
    "_id": "82341ae1-95f3-4a44-8a6e-31d3b6a45d8a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "CreateIndexInvalid",
    "url": "http://localhost:{{dockerPort}}/cf:etf",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-07-31T11:41:15.461Z",
    "modified": "2022-07-31T11:43:10.681Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "d53bb0b4-8820-41e4-9b72-4525bdd87b4f",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "a57dd921-d4d1-4281-9aa7-ac22eb4a2a4f",
    "name": "CreateDoc",
    "url": "http://localhost:62062/orgdb_orgs_v1-3/_create/goldNational2",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-07-31T11:41:15.462Z",
    "modified": "2022-08-01T12:16:22.746Z",
    "headers": [],
    "body": {
      "type": "json",
      "raw": "{\"name2\": \"Gold National\", \"active\": true, \"displayName\": \"Gold National\", \"excludeReferrals\": false, \"address\": { \"address\": \"123 Gold National Street\", \"address2\": \"Suite #1\", \"city\": \"Pittsburgh\", \"state\": \"PA\", \"postalCode\": \"12345\", \"country\": \"USA\"}, \"phone\": \"999-999-0001\", \"companyTypeId\": \"dme\"}"
    }
  },
  {
    "_id": "f743e9b8-028e-4e7f-8285-30cccd0b6ab2",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "a57dd921-d4d1-4281-9aa7-ac22eb4a2a4f",
    "name": "Template",
    "url": "http://localhost:62062/_template",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-07-31T11:41:15.463Z",
    "modified": "2022-08-01T12:16:24.019Z",
    "headers": []
  },
  {
    "_id": "67439584-ab3f-4435-b779-8216fce1361a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "a57dd921-d4d1-4281-9aa7-ac22eb4a2a4f",
    "name": "Analyze Text",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-07-31T11:41:15.464Z",
    "modified": "2022-08-01T12:16:25.130Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"text\": \"You will love Elasticsearch 7.0\"}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "3a10a6ae-6821-4f7d-9d5f-f79d479eadd6",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "GetIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-07-31T11:50:42.949Z",
    "modified": "2022-07-31T11:55:04.360Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "1e3fc6c3-9c53-41c2-9e52-084e2c47b700",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "GetAllIndexes",
    "url": "http://localhost:{{dockerPort}}/_all",
    "method": "GET",
    "sortNum": 40000,
    "created": "2022-07-31T11:52:28.834Z",
    "modified": "2022-07-31T11:52:28.834Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "0be27339-c2a4-413a-a7b2-9c0b3d4588c1",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "GetIndexNotFound",
    "url": "http://localhost:{{dockerPort}}/cf:etf",
    "method": "GET",
    "sortNum": 35000,
    "created": "2022-07-31T11:55:59.516Z",
    "modified": "2022-07-31T11:56:23.310Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "c258d43e-e6b0-41d0-8cce-04eb33e45c88",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "DeleteIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "DELETE",
    "sortNum": 37500,
    "created": "2022-07-31T12:07:15.465Z",
    "modified": "2022-07-31T12:07:33.237Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "9d7fe34a-e367-4eab-afd9-d2c4e013ef63",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "CloseIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_close",
    "method": "POST",
    "sortNum": 38750,
    "created": "2022-07-31T12:13:38.179Z",
    "modified": "2022-07-31T12:14:42.607Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "1ec62c8b-934f-40fe-ae22-2d7061d816f0",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "OpenIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_open",
    "method": "POST",
    "sortNum": 39375,
    "created": "2022-08-01T12:01:38.027Z",
    "modified": "2022-08-01T12:02:03.700Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "332e5dba-3404-4f0e-9c20-3c9e45fd5065",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "GetIndexSettings",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-01T12:08:02.207Z",
    "modified": "2022-08-01T12:08:06.724Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "773ac1d1-0a8d-4218-82c8-7da90c5b45ce",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "UpdateIndexSettings",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_settings",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T12:08:55.599Z",
    "modified": "2022-08-01T12:09:40.600Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"index\": {\n        \"number_of_replicas\": 2\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "dc9620d0-d1e9-400c-8841-f5993adfc429",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "UpdateIndexSettings (static)",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_settings",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-01T12:10:13.227Z",
    "modified": "2022-08-01T12:10:53.806Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"index\": {\n        \"codec\": \"best_compression\"\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "9d5b3b17-676d-4f0b-9533-594a13eb1e78",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "CloseIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_close",
    "method": "POST",
    "sortNum": 5000,
    "created": "2022-08-01T12:11:09.484Z",
    "modified": "2022-08-01T12:11:34.829Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "747ee8f7-20a7-4aad-93d9-f9ead1cae304",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "OpenIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_open",
    "method": "POST",
    "sortNum": 2500,
    "created": "2022-08-01T12:11:44.008Z",
    "modified": "2022-08-01T12:11:45.910Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "dd65ab13-1c0d-451b-8bff-422a4cbdc317",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "GetAllIndexTemplates",
    "url": "http://localhost:{{dockerPort}}/_template",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-01T12:16:48.181Z",
    "modified": "2022-08-01T12:19:50.393Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "c7db8525-4800-47f1-b179-1c1d540a9106",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "CreateIndexTemplate",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T12:19:24.362Z",
    "modified": "2022-08-01T12:19:24.362Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"index_patterns\": [\"cf_etf*\"],\n    \"settings\": {\n        \"number_of_replicas\": \"2\",\n        \"codec\": \"best_compression\"\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d2df9ad8-3cec-4bd5-bc2e-9bc0ac84ba80",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "GetIndexTemplate",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-01T12:20:49.659Z",
    "modified": "2022-08-01T12:21:27.793Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "93840721-d70e-44fe-bf06-97adb1924126",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "CheckIndexTemplateExists",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "HEAD",
    "sortNum": 40000,
    "created": "2022-08-01T12:21:45.187Z",
    "modified": "2022-08-01T12:21:59.515Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "bd6f9280-1d18-4846-ab44-71c200fdcfbd",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "DeleteIndexTemplate",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "DELETE",
    "sortNum": 35000,
    "created": "2022-08-01T12:22:29.343Z",
    "modified": "2022-08-01T12:22:41.995Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "c9ea9143-a430-4dba-933c-3eeb17515b37",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "CreateIndexUsingTemplate",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "PUT",
    "sortNum": 25000,
    "created": "2022-08-01T12:24:14.753Z",
    "modified": "2022-08-01T12:25:50.272Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "e0a14c95-5abf-4656-8a19-9076634c74bb",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "GetIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "GET",
    "sortNum": 27500,
    "created": "2022-08-01T12:31:16.005Z",
    "modified": "2022-08-01T12:31:29.217Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "ced0f237-2193-4681-b1f3-df67cb7d4229",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "DeleteIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "DELETE",
    "sortNum": 28750,
    "created": "2022-08-01T12:31:52.096Z",
    "modified": "2022-08-01T12:32:08.625Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "7947be38-f031-4797-9632-2651fdaaa5f7",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "CreateIndexAlias",
    "url": "http://localhost:{{dockerPort}}/cf_etf*/_alias/cf_etf_1",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-01T12:38:02.171Z",
    "modified": "2022-08-01T12:42:03.182Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "Create an alternative name for an index or multiple indices.\n\n- The syntax of the index (that is, cf_etf) can be `*` | `_all` | glob pattern | name1, name2, and so on. \n- This means that a single alias can reference multiple indices."
  },
  {
    "_id": "eca6acf5-d0a9-4317-b9bb-6a7ede40bd5d",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "GetAllIndexAliases",
    "url": "http://localhost:{{dockerPort}}/_alias",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-01T12:41:42.225Z",
    "modified": "2022-08-01T12:43:23.949Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "This API allows you to retrieve information from the alternative name of the index"
  },
  {
    "_id": "80b42d03-e77c-4aef-a4b6-9f075a41dd21",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "CheckIndexAlias",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_alias/cf_etf_1",
    "method": "HEAD",
    "sortNum": 30000,
    "created": "2022-08-01T12:44:30.932Z",
    "modified": "2022-08-01T12:50:17.158Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": " Use HEAD/cf_etf/_alias/cf_etf_1 to check whether the index alias, cf_etf_1, exists.\n- The syntax of the term (cf_etf) and the term (cf_etf_1) can be any of `*` | `_all` | glob pattern | name1, name2, and so on"
  },
  {
    "_id": "3a06619c-99aa-4e0c-87e9-dbaddc73fe81",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "DeleteIndexAlias",
    "url": "http://localhost:{{dockerPort}}/cf_etf*/_alias/cf_etf_1",
    "method": "DELETE",
    "sortNum": 40000,
    "created": "2022-08-01T12:46:10.632Z",
    "modified": "2022-08-01T12:46:48.916Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "This API allows you to retrieve information from the alternative name of the index"
  },
  {
    "_id": "570c1054-b331-40c1-acc9-2c10246241a2",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "GetIndexAlias",
    "url": "http://localhost:{{dockerPort}}/_alias/cf_etf_1",
    "method": "GET",
    "sortNum": 35000,
    "created": "2022-08-01T12:47:34.861Z",
    "modified": "2022-08-01T12:47:34.861Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "This API allows you to retrieve information from the alternative name of the index"
  },
  {
    "_id": "76259355-1986-4c81-95aa-1c58e48f8d12",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "AliasesActions",
    "url": "http://localhost:{{dockerPort}}/_aliases",
    "method": "POST",
    "sortNum": 15000,
    "created": "2022-08-01T12:50:38.937Z",
    "modified": "2022-08-01T12:56:37.602Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"cf_etf\",\n        \"alias\": \"cf_etf_2\"\n      }\n    },\n    {\n      \"remove\": {\n        \"index\": \"cf_etf\",\n        \"alias\": \"cf_etf_1\"\n      }\n    },\n    {\n      \"remove_index\": {\n        \"index\": \"cf_etf_to_be_deleted\"\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "5b3c2b47-7766-466e-b719-707cbf8a9773",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "CreateIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf_to_be_deleted",
    "method": "PUT",
    "sortNum": 17500,
    "created": "2022-08-01T12:51:23.083Z",
    "modified": "2022-08-01T12:52:51.274Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "b1cf7828-58c5-405d-90b1-0434b88f5c67",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "44e93342-59d3-45b6-8a37-3a74fd7e9e51",
    "name": "ReIndexing",
    "url": "http://localhost:{{dockerPort}}/_aliases",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-01T12:57:52.745Z",
    "modified": "2022-08-01T13:24:59.935Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"actions\": [\n    {\n      \"remove\": {\n        \"index\": \"cf_etf\",\n        \"alias\": \"cf_etf_production\"\n      }\n    },\n    {\n      \"add\": {\n        \"index\": \"cf_etf_new\",\n        \"alias\": \"cf_etf_production\"\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "1b4d396e-084a-4e5e-86e2-54bb35aed013",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create cf_etf_large Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-01T13:05:33.597Z",
    "modified": "2022-08-01T13:06:55.990Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "6b15a7b4-4781-4bfe-a0a3-071af266c7a9",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create cf_etf_mid Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_mid",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T13:07:00.910Z",
    "modified": "2022-08-01T13:07:42.877Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "e2784571-a55b-480a-80a4-8514152f99fe",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create cf_etf_others Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_others",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-01T13:07:47.835Z",
    "modified": "2022-08-01T13:08:26.583Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "e8a2f293-5437-4534-8e0e-0944fc277a8a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create Alias",
    "url": "http://localhost:{{dockerPort}}/cf_*/_alias/cf_etf_alias",
    "method": "PUT",
    "sortNum": 40000,
    "created": "2022-08-01T13:16:28.813Z",
    "modified": "2022-08-01T13:23:03.058Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "Too many documents under the index may degrade search performance.\n\n If most queries are based on the same field of the index, such as category, class, and type, then you can logically group data by that field. \n\nLet's assume that there is a category field in the documents. \n- There are four categories, which are large, mid, small, and others. \n- If the documents can be evenly divided into each category, we can create four indices based on the category to index the documents. \n- Then, we can create an alias called cf_etf_alias to contain all four indices. \n\nIf you want to search for records from **all categories**, just use the index alias, `cf_etf_alias`. The following steps are used to create the index alias for all four indices."
  },
  {
    "_id": "08025996-9c8e-47d3-ae53-9aea4663535a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "GetAlias",
    "url": "http://localhost:{{dockerPort}}/_alias/cf_etf_alias",
    "method": "GET",
    "sortNum": 50000,
    "created": "2022-08-01T13:17:29.127Z",
    "modified": "2022-08-01T13:17:48.907Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "3d8880ec-f9b5-4f4b-af4b-111491bb9e7e",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "CreateIndex",
    "url": "http://localhost:{{dockerPort}}/cf_view",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-01T13:36:20.410Z",
    "modified": "2022-08-01T13:45:22.685Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"mappings\": {\n        \"properties\": {\n            \"symbol\": {\"type\": \"keyword\"},\n            \"category\": {\"type\": \"keyword\"}\n        }\n    }\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "698fd078-5e3b-4c91-a663-31e7eb46685a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "Index Documents 1",
    "url": "http://localhost:{{dockerPort}}/cf_view/_doc/1",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T13:45:26.475Z",
    "modified": "2022-08-01T13:47:59.994Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"symbol\": \"ACWF\", \"category\": \"Equity\"}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "38e950c2-3879-4fd8-8080-a93b4209923d",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "Index Documents 2",
    "url": "http://localhost:{{dockerPort}}/cf_view/_doc/2",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-01T13:48:16.467Z",
    "modified": "2022-08-01T13:49:00.002Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"symbol\": \"ACWI\", \"category\": \"International\"}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "03e1d864-c6f4-48de-8e2e-f77d65ca6ced",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "CreateFilteredAlias",
    "url": "http://localhost:{{dockerPort}}/_aliases",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-01T13:49:13.866Z",
    "modified": "2022-08-01T13:53:00.972Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"cf_view\",\n        \"alias\": \"cf_view_international\",\n        \"filter\": {\n          \"term\": {\n            \"category\": \"International\"\n          }\n        }\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "42761fa8-5b5c-4c9b-acaa-6d0bf61a4875",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "QueryAlias",
    "url": "http://localhost:{{dockerPort}}/cf_view_international/_search",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-01T13:53:23.071Z",
    "modified": "2022-08-01T14:03:03.773Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "21d85031-59bb-48ce-a58a-34b8d4d7bc8e",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "QueryIndex",
    "url": "http://localhost:{{dockerPort}}/cf_view/_search",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-01T14:05:18.964Z",
    "modified": "2022-08-01T14:05:37.570Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "1d9d7c5e-0b51-42e1-b94a-c96ed7cf8ffe",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexStats",
    "url": "http://localhost:{{dockerPort}}/cf_view/_stats",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-01T14:49:03.716Z",
    "modified": "2022-08-01T14:49:45.495Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "a1a28422-5472-4422-9c73-b10e92438b60",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexSegments",
    "url": "http://localhost:{{dockerPort}}/cf_view/_segments",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-01T15:48:32.783Z",
    "modified": "2022-08-01T15:48:55.743Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "7730c16e-8362-4b6b-9e9f-22e069d07152",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexRecovery",
    "url": "http://localhost:{{dockerPort}}/cf_view/_recovery",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-01T15:49:07.348Z",
    "modified": "2022-08-01T15:49:24.681Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "5b64b13d-8e1c-4258-be27-a1b5f99a5ec5",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexShardStores",
    "url": "http://localhost:{{dockerPort}}/cf_view/_shard_stores",
    "method": "GET",
    "sortNum": 40000,
    "created": "2022-08-01T15:49:30.920Z",
    "modified": "2022-08-01T15:49:56.331Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "f0a070ee-5ea5-4356-8d56-5432c9cc455f",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "c51ee70d-4bc5-45e6-8496-66ba258d245d",
    "name": "Upsert Document",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-04T12:31:43.820Z",
    "modified": "2022-08-04T12:40:26.131Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"symbol\": \"ACWF\",\n  \"fund_name\": \"iShares Edge MSCI Multifactor Global ETF\",\n  \"rating\": 3,\n  \"morningstar_category\": \"World Large Stock\",\n  \"category\": \"Equity\",\n  \"family\": \"iShares\",\n  \"market_cap\": \"large\",\n  \"description\": \"The investment seeks to track the investment results of the MSCI ACWI Diversified Multiple-Factor Index.\\\\n The fund generally will invest at least 90% of its assets in the component securities of the underlying index and in investments that have economic characteristics that are substantially identical to the component securities of the underlying index. The underlying index is designed to contain equity securities from the MSCI ACWI Index (the \\\\\\\"parent index\\\\\\\") that have high exposure to four investment style factors: value, quality, momentum and low size, while maintaining a level of risk similar to that of the parent index.\",\n  \"exchange\": \"NYSE Arca\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "32fbd687-4c1c-4395-8deb-b1c7781e9ca1",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "c51ee70d-4bc5-45e6-8496-66ba258d245d",
    "name": "Add Document without ID",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-04T12:35:43.432Z",
    "modified": "2022-08-04T12:40:29.651Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"symbol\": \"ACWI\",\n  \"fund_name\": \"iShares MSCI ACWI ETF\",\n  \"rating\": 3,\n  \"morningstar_category\": \"World Large Stock\",\n  \"category\": \"International\",\n  \"family\": \"iShares\",\n  \"market_cap\": \"large\",\n  \"description\": \"The investment seeks to track the investment results of the MSCI ACWI composed of large- and mid-capitalization developed and emerging market equities.\\\\n The fund generally will invest at least 90% of its assets in the component securities of the underlying index and in investments that have economic characteristics that are substantially identical to the component securities of the underlying index. The index is a free float-adjusted market capitalization index designed to measure the combined equity market performance of developed and emerging markets countries.\",\n  \"exchange\": \"NASDAQ Global Market\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "98522d06-57b8-4b6d-afa3-71e6931fb4b0",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "c51ee70d-4bc5-45e6-8496-66ba258d245d",
    "name": "Insert Document (option 1)",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1/_create",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-04T12:37:50.421Z",
    "modified": "2022-08-04T12:40:27.402Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"symbol\": \"ACWF\",\n  \"fund_name\": \"iShares Edge MSCI Multifactor Global ETF\",\n  \"rating\": 3,\n  \"morningstar_category\": \"World Large Stock\",\n  \"category\": \"Equity\",\n  \"family\": \"iShares\",\n  \"market_cap\": \"large\",\n  \"description\": \"The investment seeks to track the investment results of the MSCI ACWI Diversified Multiple-Factor Index.\\\\n The fund generally will invest at least 90% of its assets in the component securities of the underlying index and in investments that have economic characteristics that are substantially identical to the component securities of the underlying index. The underlying index is designed to contain equity securities from the MSCI ACWI Index (the \\\\\\\"parent index\\\\\\\") that have high exposure to four investment style factors: value, quality, momentum and low size, while maintaining a level of risk similar to that of the parent index.\",\n  \"exchange\": \"NYSE Arca\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "012a48d6-a7fd-491a-b1b3-98948124140a",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "c51ee70d-4bc5-45e6-8496-66ba258d245d",
    "name": "Insert Document (option 2) ",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1?op_type=create",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-04T12:38:27.804Z",
    "modified": "2022-08-04T12:40:28.559Z",
    "headers": [],
    "params": [
      {
        "name": "op_type",
        "value": "create",
        "isPath": false
      }
    ],
    "body": {
      "type": "json",
      "raw": "{\n  \"symbol\": \"ACWF\",\n  \"fund_name\": \"iShares Edge MSCI Multifactor Global ETF\",\n  \"rating\": 3,\n  \"morningstar_category\": \"World Large Stock\",\n  \"category\": \"Equity\",\n  \"family\": \"iShares\",\n  \"market_cap\": \"large\",\n  \"description\": \"The investment seeks to track the investment results of the MSCI ACWI Diversified Multiple-Factor Index.\\\\n The fund generally will invest at least 90% of its assets in the component securities of the underlying index and in investments that have economic characteristics that are substantially identical to the component securities of the underlying index. The underlying index is designed to contain equity securities from the MSCI ACWI Index (the \\\\\\\"parent index\\\\\\\") that have high exposure to four investment style factors: value, quality, momentum and low size, while maintaining a level of risk similar to that of the parent index.\",\n  \"exchange\": \"NYSE Arca\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "a5c7d6cb-d789-415c-82bc-42eef2bb0604",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "26232bd0-e150-40fe-b54d-9c057b4bfa14",
    "name": "Retrieve Whole Document",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-04T12:45:26.056Z",
    "modified": "2022-08-04T13:26:11.560Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "08a1b33e-96e7-4c2e-bf7d-cbcacd179c91",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "26232bd0-e150-40fe-b54d-9c057b4bfa14",
    "name": "Retrieve Partial Document",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1?_source=symbol,rating,category",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-04T12:46:20.647Z",
    "modified": "2022-08-04T12:47:09.644Z",
    "headers": [],
    "params": [
      {
        "name": "_source",
        "value": "symbol,rating,category",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "0a11c4d2-1c9d-4fa1-8da9-dfdd3713c6f7",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "26232bd0-e150-40fe-b54d-9c057b4bfa14",
    "name": "Check Document Exists",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1",
    "method": "HEAD",
    "sortNum": 30000,
    "created": "2022-08-04T12:47:39.598Z",
    "modified": "2022-08-04T12:47:57.262Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "f6479f3f-4f88-4672-a509-994206267c1b",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "c51ee70d-4bc5-45e6-8496-66ba258d245d",
    "name": "Create Index ",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "PUT",
    "sortNum": 5000,
    "created": "2022-08-04T12:48:56.106Z",
    "modified": "2022-08-04T12:49:15.568Z",
    "headers": []
  },
  {
    "_id": "4731958d-eb8c-4fd5-8cee-048e6513d506",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "34d7dd00-b6ba-46d7-b9c9-03cb4de26fd1",
    "name": "Update Document",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1/_update",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-04T13:13:07.694Z",
    "modified": "2022-08-04T13:21:30.460Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"doc\": {\n    \"market_cap\": \"mid\"\n  }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "08ee5720-dcb6-4af1-9d0e-0ed3fb740ca2",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "34d7dd00-b6ba-46d7-b9c9-03cb4de26fd1",
    "name": "Remove Field",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1/_update",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-04T13:22:02.256Z",
    "modified": "2022-08-04T13:23:03.283Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"script\": \"ctx._source.remove('market_cap')\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d11f5ad0-67ea-4a9c-8528-9f51df387ff3",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "8f8a0b69-8a19-47de-ac0a-4c8f77b31585",
    "name": "Delete Document",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_doc/1",
    "method": "DELETE",
    "sortNum": 10000,
    "created": "2022-08-04T13:25:20.633Z",
    "modified": "2022-08-04T13:26:19.176Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "b6fe3ffc-8f2c-4e4a-b72e-969120dc38ee",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "028da5ce-25b1-4ab8-8391-09d0177c231e",
    "name": "Retrieve Multi",
    "url": "http://localhost:{{dockerPort}}/_mget",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-04T13:29:32.677Z",
    "modified": "2022-08-04T13:34:52.931Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"docs\":[\n        {\n            \"_index\": \"cf_etf\",\n            \"_id\": \"1\",\n            \"_source\": [\"symbol\", \"category\"]\n        },\n        {\n            \"_index\": \"cf_etf\",\n            \"_id\": \"1\",\n            \"_source\": [\"symbol\", \"category\"]\n        }\n    ]\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "2e2fa3f4-ca06-46d7-a871-bfd827a65c98",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "028da5ce-25b1-4ab8-8391-09d0177c231e",
    "name": "Bulk API",
    "url": "http://localhost:{{dockerPort}}/_bulk",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-04T13:37:31.282Z",
    "modified": "2022-08-04T14:36:50.913Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"delete\": {\"_index\": \"cf_etf\", \"_id\":\"1\"}}\n{\"create\": {\"_index\": \"cf_etf\", \"_id\":\"1\"}}\n{\"symbol\":\"ACWF\",\"fund_name\":\"iShares Edge MSCI Multifactor Global ETF\",\"rating\":3,\"morningstar_category\":\"World Large Stock\",\"category\":\"Equity\",\"family\":\"iShares\",\"market_cap\":\"large\",\"description\":\"The investment seeks to track the investment results of the MSCI ACWI Diversified Multiple-Factor Index.\\\\n The fund generally will invest at least 90% of its assets in the component securities of the underlying index and in investments that have economic characteristics that are substantially identical to the component securities of the underlying index. The underlying index is designed to contain equity securities from the MSCI ACWI Index (the \\\\\\\"parent index\\\\\\\") that have high exposure to four investment style factors: value, quality, momentum and low size, while maintaining a level of risk similar to that of the parent index.\",\"exchange\":\"NYSE Arca\"}\n{\"update\": {\"_index\": \"cf_etf\", \"_type\": \"_doc\", \"_id\":\"1\"}}\n{\"script\": \"ctx._source.remove('market_cap')\"}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "2ab64a29-3760-4e27-a8bb-224de497e45d",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "028da5ce-25b1-4ab8-8391-09d0177c231e",
    "name": "UpdateByQuery API",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_update_by_query",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-04T15:05:15.049Z",
    "modified": "2022-08-04T15:12:47.101Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"script\": \"if (ctx._source['rating'] == 3) { ctx._source['rating'] = 4 }\"}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "8df4a399-447a-43f7-ab41-39c1b4a72cf5",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "028da5ce-25b1-4ab8-8391-09d0177c231e",
    "name": "DeleteByQuery API",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_delete_by_query",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-04T15:20:18.336Z",
    "modified": "2022-08-04T15:22:32.965Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"query\": {\"match\": {\"rating\": 4}}}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "c0a4e62a-f6d4-4394-8e5f-91a94f2fbbf6",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "Index With Default Mapping",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index",
    "method": "PUT",
    "sortNum": 15000,
    "created": "2022-08-04T16:10:33.040Z",
    "modified": "2022-08-05T12:33:13.385Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"mappings\": {\n        \"dynamic_date_formats\": [\"yyyy/MM/dd\"]\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "b55c23bb-f60e-4d41-85be-6eb3a0286f65",
    "colId": "a4f51b13-ffc8-4aac-afed-20e032d1a925",
    "containerId": "028da5ce-25b1-4ab8-8391-09d0177c231e",
    "name": "Copy Documents",
    "url": "http://localhost:{{dockerPort}}/_reindex",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-05T12:31:05.378Z",
    "modified": "2022-08-05T12:33:15.265Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"source\": {\"index\": \"cf_etf\"},\n    \"dest\": {\"index\": \"cf_view\"}\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "3318670d-ff89-4eaa-b8c3-ca807f708b1b",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "Add Document",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index/_doc/1",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-05T12:32:30.421Z",
    "modified": "2022-08-05T12:36:46.803Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"simple_string_value\": \"a string\",\n    \"string_w_date_value\": \"2019/02/07\",\n    \"string_w_floating_point_value\": \"1.11\",\n    \"string_w_integer_value\": \"1\",\n    \"integer_value\": 1,\n    \"floating_point_value\": 1.1,\n    \"json_object\": {\"level_1\": {\"level_2_1\": \"a string\", \"level_2_2\": 1.11} },\n    \"array_of_integer\": [1,2],\n    \"array_of_simple_string\": [\"ab\", \"cd\"],\n    \"array_of_integer_string\": [\"1\", \"2\"],\n    \"array_of_float_string\": [\"1.11\", \"2.22\"],\n    \"boolean_value\": true,\n    \"null_value\": null\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "65fdddbc-ddb8-4fd2-97b7-81daffaa102d",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "GetDocument",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index/_doc/1",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-05T12:36:55.639Z",
    "modified": "2022-08-05T12:37:12.824Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "8299ce3d-6a2b-4739-b989-c10c0de916f2",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "Index With Custom Mapping",
    "url": "http://localhost:{{dockerPort}}/custom_mappings_index?include_type_name=true",
    "method": "PUT",
    "sortNum": 17500,
    "created": "2022-08-05T12:38:12.048Z",
    "modified": "2022-08-05T13:44:47.590Z",
    "headers": [],
    "params": [
      {
        "name": "include_type_name",
        "value": "true",
        "isPath": false
      }
    ],
    "body": {
      "type": "json",
      "raw": "{\n    \"mappings\": {\n        \"_doc\": {\n            \"date_detection\": false,\n            \"numeric_detection\": true\n        }\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "2d22e1bb-5fb4-4cba-8591-713b42c3b413",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "Delete Custom Mapping Index",
    "url": "http://localhost:{{dockerPort}}/custom_mappings_index",
    "method": "DELETE",
    "sortNum": 18750,
    "created": "2022-08-05T13:45:02.922Z",
    "modified": "2022-08-05T13:45:18.512Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "e786ba9f-5732-4fa2-b466-cf6a0bee019d",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "Copy Document To Custom",
    "url": "http://localhost:{{dockerPort}}/_reindex",
    "method": "POST",
    "sortNum": 18125,
    "created": "2022-08-05T13:45:42.129Z",
    "modified": "2022-08-05T13:46:22.587Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"source\": {\"index\": \"default_mappings_index\"},\n    \"dest\": {\"index\": \"custom_mappings_index\"}\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "e2a97ab6-7c80-41cc-9c88-f3ad169c46a8",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "GetMappings Default",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index/_mappings",
    "method": "GET",
    "sortNum": 40000,
    "created": "2022-08-05T13:46:30.347Z",
    "modified": "2022-08-05T13:57:39.573Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "eb7bb3d9-098c-4065-b2df-dfed64f75f57",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "GetDocument From DefaultMappingsIndex",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index/_doc/1",
    "method": "GET",
    "sortNum": 35000,
    "created": "2022-08-05T13:56:47.220Z",
    "modified": "2022-08-05T13:56:47.220Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "421f39ba-cbfe-41e0-8290-2f45925b9ed0",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "3b753fe5-931d-44ea-8c2d-a2c1742d0b26",
    "name": "GetMappings Custom",
    "url": "http://localhost:{{dockerPort}}/custom_mappings_index/_mappings",
    "method": "GET",
    "sortNum": 50000,
    "created": "2022-08-05T13:58:17.774Z",
    "modified": "2022-08-05T13:58:48.627Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "3b105ddf-9e2a-48de-87ee-48db7ffecbc1",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "4667a55d-d84b-4814-9bd3-a86982733c9a",
    "name": "Add Dynamic Template",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index?overwrite=true",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-09T13:49:37.040Z",
    "modified": "2022-08-09T15:24:46.417Z",
    "headers": [],
    "params": [
      {
        "name": "overwrite",
        "value": "true",
        "isPath": false
      }
    ],
    "body": {
      "type": "json",
      "raw": "{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"integers_template\": {\n          \"match_mapping_type\": \"long\",\n          \"mapping\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      {\n        \"field_name_template\": {\n          \"match_mapping_type\": \"string\",\n          \"match\": \"*_simple_string\",\n          \"mapping\": {\n            \"type\": \"keyword\"\n          }\n        }\n      },\n      {\n        \"path_match_template\": {\n          \"path_match\": \"json_object.*.level_2_1\",\n          \"mapping\": {\n            \"type\": \"double\"\n          }\n        }\n      }\n    ]\n  }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "fdd04954-3bdd-417c-a290-5eefdc5a7be0",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "4667a55d-d84b-4814-9bd3-a86982733c9a",
    "name": "GetMappings Default",
    "url": "http://localhost:{{dockerPort}}/cf_etf_toy",
    "method": "PUT",
    "sortNum": 5000,
    "created": "2022-08-09T13:58:08.021Z",
    "modified": "2022-08-10T13:18:44.780Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"mappings\": {\n        \"_meta\": {\n            \"release\": \"1.0\",\n            \"version\": \"1\"\n        },\n        \"_routing\":{\n            \"required\": \"true\"\n        },\n        \"_source\":{\n            \"enabled\": \"true\"\n        }\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "70fbd4f9-6906-4666-8dc3-545288ff45eb",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "4667a55d-d84b-4814-9bd3-a86982733c9a",
    "name": "Add Document",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index/_doc/1",
    "method": "POST",
    "sortNum": 2500,
    "created": "2022-08-09T13:58:43.693Z",
    "modified": "2022-08-09T13:58:46.190Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"simple_string_value\": \"a string\",\n    \"string_w_date_value\": \"2019/02/07\",\n    \"string_w_floating_point_value\": \"1.11\",\n    \"string_w_integer_value\": \"1\",\n    \"integer_value\": 1,\n    \"floating_point_value\": 1.1,\n    \"json_object\": {\"level_1\": {\"level_2_1\": \"a string\", \"level_2_2\": 1.11} },\n    \"array_of_integer\": [1,2],\n    \"array_of_simple_string\": [\"ab\", \"cd\"],\n    \"array_of_integer_string\": [\"1\", \"2\"],\n    \"array_of_float_string\": [\"1.11\", \"2.22\"],\n    \"boolean_value\": true,\n    \"null_value\": null\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "2b209a69-3f12-4637-bc28-1610edb85f19",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "4667a55d-d84b-4814-9bd3-a86982733c9a",
    "name": "Add Dynamic Template - alt",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index/_mappings",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-10T13:10:19.218Z",
    "modified": "2022-08-10T13:12:05.646Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"dynamic_templates\": [\n    {\n      \"integers_template\": {\n        \"match_mapping_type\": \"long\",\n        \"mapping\": {\n          \"type\": \"integer\"\n        }\n      }\n    },\n    {\n      \"field_name_template\": {\n        \"match_mapping_type\": \"string\",\n        \"match\": \"*_simple_string\",\n        \"mapping\": {\n          \"type\": \"keyword\"\n        }\n      }\n    },\n    {\n      \"path_match_template\": {\n        \"path_match\": \"json_object.*.level_2_2\",\n        \"mapping\": {\n          \"type\": \"double\"\n        }\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6a93940c-d7c7-4349-a19e-bd0af5fe4698",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "9a0e2d6c-d295-4b9f-8180-604ed629d989",
    "name": "Add Meta Fields",
    "url": "http://localhost:{{dockerPort}}/default_mappings_index?overwrite=true",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-10T13:17:01.914Z",
    "modified": "2022-08-10T13:17:06.343Z",
    "headers": [],
    "params": [
      {
        "name": "overwrite",
        "value": "true",
        "isPath": false
      }
    ],
    "body": {
      "type": "json",
      "raw": "{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"integers_template\": {\n          \"match_mapping_type\": \"long\",\n          \"mapping\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      {\n        \"field_name_template\": {\n          \"match_mapping_type\": \"string\",\n          \"match\": \"*_simple_string\",\n          \"mapping\": {\n            \"type\": \"keyword\"\n          }\n        }\n      },\n      {\n        \"path_match_template\": {\n          \"path_match\": \"json_object.*.level_2_1\",\n          \"mapping\": {\n            \"type\": \"double\"\n          }\n        }\n      }\n    ]\n  }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d5461c8b-f5ad-4731-8f8d-abb6aad67ced",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "9a0e2d6c-d295-4b9f-8180-604ed629d989",
    "name": "Add Document ",
    "url": "http://localhost:{{dockerPort}}/cf_etf_toy/_doc/1",
    "method": "POST",
    "sortNum": 5000,
    "created": "2022-08-10T13:18:55.662Z",
    "modified": "2022-08-10T13:19:17.072Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"simple_string_value\": \"a string\",\n    \"string_w_date_value\": \"2019/02/07\",\n    \"string_w_floating_point_value\": \"1.11\",\n    \"string_w_integer_value\": \"1\",\n    \"integer_value\": 1,\n    \"floating_point_value\": 1.1,\n    \"json_object\": {\"level_1\": {\"level_2_1\": \"a string\", \"level_2_2\": 1.11} },\n    \"array_of_integer\": [1,2],\n    \"array_of_simple_string\": [\"ab\", \"cd\"],\n    \"array_of_integer_string\": [\"1\", \"2\"],\n    \"array_of_float_string\": [\"1.11\", \"2.22\"],\n    \"boolean_value\": true,\n    \"null_value\": null\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "16271304-1650-4bc0-8e6a-3bd9b002d5ae",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "Create Index With Static Mapping",
    "url": "http://localhost:{{dockerPort}}/static_mapping_index",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-10T13:22:29.982Z",
    "modified": "2022-08-10T13:28:46.645Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"mappings\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"symbol\": {\n        \"type\": \"keyword\"\n      },\n      \"fund_name\": {\n        \"type\": \"text\"\n      },\n      \"rating\": {\n        \"type\": \"byte\"\n      },\n      \"morningstar_category\": {\n        \"type\": \"keyword\"\n      },\n      \"category\": {\n        \"type\": \"keyword\"\n      },\n      \"family\": {\n        \"type\": \"keyword\"\n      },\n      \"market_cap\": {\n        \"type\": \"keyword\"\n      },\n      \"description\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"row\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    }\n  }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "cc5cb803-44f1-479b-8e3a-92be586f3f9e",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "Upsert Document ",
    "url": "http://localhost:{{dockerPort}}/static_mapping_index/_doc/1",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-10T13:32:00.955Z",
    "modified": "2022-08-10T13:32:27.402Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"symbol\": \"ACWF\",\n  \"fund_name\": \"iShares Edge MSCI Multifactor Global ETF\",\n  \"rating\": 3,\n  \"morningstar_category\": \"World Large Stock\",\n  \"category\": \"Equity\",\n  \"family\": \"iShares\",\n  \"market_cap\": \"large\",\n  \"description\": \"The investment seeks to track the investment results of the MSCI ACWI Diversified Multiple-Factor Index.\\\\n The fund generally will invest at least 90% of its assets in the component securities of the underlying index and in investments that have economic characteristics that are substantially identical to the component securities of the underlying index. The underlying index is designed to contain equity securities from the MSCI ACWI Index (the \\\\\\\"parent index\\\\\\\") that have high exposure to four investment style factors: value, quality, momentum and low size, while maintaining a level of risk similar to that of the parent index.\",\n  \"exchange\": \"NYSE Arca\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "f1e9c5d2-2c76-4290-893d-5b124cbfad2a",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "GetMappings",
    "url": "http://localhost:{{dockerPort}}/static_mapping_index/_mappings",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-10T13:32:38.462Z",
    "modified": "2022-08-10T13:33:34.038Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "2a309b7b-0178-4489-bca1-d6c90897e296",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "UpdateMappings",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_mappings",
    "method": "PUT",
    "sortNum": 40000,
    "created": "2022-08-11T16:58:04.787Z",
    "modified": "2022-08-12T11:52:51.477Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"dynamic\": false,\n\t\"properties\": {\n\t\t\"symbol\": {\"type\": \"keyword\"},\n\t\t\"fund_name\": {\"type\": \"text\"},\n\t\t\"rating\":{\"type\":\"byte\"},\n\t\t\"morningstar_category\":{\"type\": \"keyword\"},\n\t\t\"category\": {\"type\": \"keyword\"},\n\t\t\"family\":{\"type\":\"keyword\"},\n\t\t\"market_cap\":{\"type\":\"text\"},\n\t\t\"description\":{\"type\":\"text\", \"fields\": {\"raw\": {\"type\": \"keyword\"}}},\n\t\t\"exchange\":{\"type\":\"keyword\"}\n\t}\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "be986725-93d5-412d-bc65-2babc0c75a2a",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "Delete Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "DELETE",
    "sortNum": 50000,
    "created": "2022-08-12T11:51:04.685Z",
    "modified": "2022-08-12T11:51:16.306Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "2ae552fc-e806-49ec-bac7-281c723a6508",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "Refresh Mappings",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_update_by_query?refresh",
    "method": "POST",
    "sortNum": 45000,
    "created": "2022-08-12T11:53:20.376Z",
    "modified": "2022-08-12T11:53:59.298Z",
    "headers": [],
    "params": [
      {
        "name": "refresh",
        "value": "",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "70aef71d-fd8e-4870-95b3-5555e3e3678a",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "Search Document",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_mappings?include_type_name=false",
    "method": "GET",
    "sortNum": 47500,
    "created": "2022-08-12T11:55:09.337Z",
    "modified": "2022-08-12T11:58:13.552Z",
    "headers": [],
    "params": [
      {
        "name": "include_type_name",
        "value": "false",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "eb1520ef-f616-4e56-8786-3d0a24d93e60",
    "colId": "f7574596-6602-488c-897c-435ed2902e0f",
    "containerId": "b7e7202d-e114-44c6-9fa0-86474c8eb4df",
    "name": "GetMapping Without Type Name",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=exchange:\"NYSE Arca\"",
    "method": "GET",
    "sortNum": 48750,
    "created": "2022-08-12T11:57:40.663Z",
    "modified": "2022-08-12T11:57:40.663Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "exchange:\"NYSE Arca\"",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "afde1d41-e581-4302-866d-814aa412e384",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "c2f4ef5a-6e48-4c12-9393-3e6605c97664",
    "name": "Tokenize",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-12T12:27:43.333Z",
    "modified": "2022-08-12T12:32:00.133Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"text\": \"<body>You'll love elasticsearch 7.0</body>\",\n    \"tokenizer\": \"standard\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "557c8ef0-d821-44f1-8dc6-3252be282ee8",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "c2f4ef5a-6e48-4c12-9393-3e6605c97664",
    "name": "Tokenize And Filter",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-12T12:30:08.035Z",
    "modified": "2022-08-12T12:32:01.303Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"text\": \"<body>You'll love elasticsearch 7.0</body>\",\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"lowercase\"]\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "95da9844-cf28-4654-bb57-b7104e293c31",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "c2f4ef5a-6e48-4c12-9393-3e6605c97664",
    "name": "Tokenize And Filter - Alt",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-12T12:30:42.718Z",
    "modified": "2022-08-12T12:32:02.414Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"text\": \"<body>You'll love elasticsearch 7.0</body>\",\n    \"analyzer\": \"standard\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "0ba20512-853a-4fe3-9604-97acb66a01d4",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "e56e0ae9-6ef9-4c46-bf91-6245a7283225",
    "name": "HtmlStrip",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-12T12:45:29.320Z",
    "modified": "2022-08-12T12:48:10.516Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"<body>You'll love Elasticsearch 7.0</body>\",\n\t\"tokenizer\": \"standard\",\n\t\"filter\": [\"lowercase\"],\n\t\"char_filter\": [\"html_strip\"]\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "a5f0ca8f-46bd-4690-a66c-612ba1883da3",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "e56e0ae9-6ef9-4c46-bf91-6245a7283225",
    "name": "HtmlStrip and Map",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-12T12:55:29.811Z",
    "modified": "2022-08-12T12:55:43.931Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"<body>You'll love Elasticsearch 7.0</body>\",\n\t\"tokenizer\": \"standard\",\n\t\"filter\": [\"lowercase\"],\n\t\"char_filter\": [\"html_strip\", {\"type\": \"mapping\", \"mappings\": [\"You'll => You will\"]}]\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "a4f276ef-7825-4c92-bf4e-af2ea41a4c8e",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "e56e0ae9-6ef9-4c46-bf91-6245a7283225",
    "name": "HtmlStrip - Map - Pattern",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-12T12:59:47.475Z",
    "modified": "2022-08-12T13:00:15.840Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"<body>You'll love Elasticsearch 7.0</body>\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    \"lowercase\"\n  ],\n  \"char_filter\": [\n    \"html_strip\",\n    {\n      \"type\": \"mapping\",\n      \"mappings\": [\n        \"You'll => You will\"\n      ]\n    },\n    {\n      \"type\": \"pattern_replace\",\n      \"pattern\": \"(\\\\d+).(\\\\d+)\",\n      \"replacement\": \"v$1\"\n    }\n  ]\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "f91a06b8-4a28-406f-8327-d5ebb602d1fc",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "StandardTokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-12T14:25:04.152Z",
    "modified": "2022-08-12T16:08:52.759Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"POST https://api.iextrading.com/1.0/stock/acwf/company /usr/local\",\n\t\"tokenizer\": \"standard\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "fff93ede-715f-4b5f-aa77-34585424df1b",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "LetterTokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-12T14:25:55.408Z",
    "modified": "2022-08-12T16:08:55.549Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"POST https://api.iextrading.com/1.0/stock/acwf/company /usr/local\",\n\t\"tokenizer\": \"uax_url_email\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "76b062ac-11dd-4f50-8b3f-4143efe7cbf8",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "LowercaseTokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-12T14:26:19.234Z",
    "modified": "2022-08-12T16:08:59.428Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"POST https://api.iextrading.com/1.0/stock/acwf/company /usr/local\",\n\t\"tokenizer\": \"lowercase\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "fc375cfe-d461-421d-9ce8-d5ba0e6e140f",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "WhitespaceTokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-12T14:35:00.223Z",
    "modified": "2022-08-12T16:09:01.229Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"POST https://api.iextrading.com/1.0/stock/acwf/company /usr/local\",\n\t\"tokenizer\": \"whitespace\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "32ad1af4-03d3-4d90-98bb-98117adc69aa",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "URL Email Tokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-12T14:37:29.594Z",
    "modified": "2022-08-12T16:09:03.130Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"POST https://api.iextrading.com/1.0/stock/acwf/company /usr/local\",\n\t\"tokenizer\": \"uax_url_email\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "77404b86-a370-497c-96f1-33ef7d78a2e4",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "Classic Tokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-12T14:52:12.861Z",
    "modified": "2022-08-12T16:09:05.156Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"POST https://api.iextrading.com/1.0/stock/acwf/company /usr/local\",\n\t\"tokenizer\": \"classic\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "907263c8-67f0-417d-96b0-87dabc02ff07",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "789c4e71-6d75-496d-9409-52ab2ecfac51",
    "name": "Thai Tokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 70000,
    "created": "2022-08-12T14:55:07.812Z",
    "modified": "2022-08-12T16:09:07.035Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"คุณจะรัก Elasticsearch 7.0\",\n\t\"tokenizer\": \"thai\"\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d0ed2af9-3688-416d-bdb8-cf21af140801",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "ae1b3bea-aaa1-4f48-b0c4-e5edcba577ed",
    "name": "Ngram Tokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-12T15:28:03.803Z",
    "modified": "2022-08-12T16:09:09.825Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"Elasticsearch 7.0\",\n\t\"tokenizer\": {\n    \"type\": \"edge_ngram\",\n    \"min_gram\": 2,\n    \"max_gram\": 2,\n    \"token_chars\": [\"punctuation\", \"digit\"]\n  }\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6746a268-3f0f-44cf-bf97-e05a36053dfe",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "ae1b3bea-aaa1-4f48-b0c4-e5edcba577ed",
    "name": "EdgeNgram Tokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-12T15:37:17.539Z",
    "modified": "2022-08-12T16:09:11.266Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"text\": \"Elasticsearch 7.0\",\n\t\"tokenizer\": {\n    \"type\": \"ngram\",\n    \"min_gram\": 2,\n    \"max_gram\": 2,\n    \"token_chars\": [\"punctuation\", \"digit\"]\n  }\n\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "708fbd98-63d6-4749-8c42-5b30fb86e935",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "KeywordTokenizer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-12T16:09:25.867Z",
    "modified": "2022-08-12T16:10:25.039Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch 7.0\",\n  \"tokenizer\": \"keyword\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6bb3dee3-01ce-410c-8d2f-00e421b46102",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "Pattern",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-12T16:10:37.465Z",
    "modified": "2022-08-12T16:11:07.770Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch 7.0\",\n  \"tokenizer\": \"pattern\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "7617cc5b-3b54-4de4-9886-1fccc4302721",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "Pattern Custom",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-12T16:11:12.059Z",
    "modified": "2022-08-12T16:12:38.890Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch 7.0\",\n  \"tokenizer\": {\"type\": \"pattern\", \"pattern\": \"\\\\d+\"}\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "1ca6a949-3e7d-4c02-b4c3-fd4199becbee",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "Char Group",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-12T16:13:05.314Z",
    "modified": "2022-08-12T16:15:22.605Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch 7.0\",\n  \"tokenizer\": {\"type\": \"char_group\", \"tokenize_on_chars\": [\"digit\"]}\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "2666c1bf-ce10-417e-a126-2863416c7321",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "SimplePattern Custom",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-12T16:15:42.300Z",
    "modified": "2022-08-12T16:16:41.877Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch 7.0\",\n  \"tokenizer\": {\"type\": \"simple_pattern\", \"pattern\": \"[a-zA-z]*\"}\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "bbf0c12f-2535-4294-b0a6-0eb18e290101",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "SimplePatternSplit",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-12T16:16:57.610Z",
    "modified": "2022-08-12T16:19:28.346Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch 7.0\",\n  \"tokenizer\": {\"type\": \"simple_pattern_split\", \"pattern\": \"[a-zA-Z.]*\"}\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "584ea64b-2ef4-47ed-9071-80708e131f4f",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "7e4e6907-d520-457b-bf65-4a906857e82c",
    "name": "PathHierarchy",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 70000,
    "created": "2022-08-12T16:32:07.638Z",
    "modified": "2022-08-12T16:32:47.433Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"/usr/local\",\n  \"tokenizer\": {\"type\": \"path_hierarchy\", \"replacement\": \"*\"}\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "48b702ef-5aea-4748-ac55-74d7cb460dc9",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "AsciiFolding",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-12T17:02:15.550Z",
    "modified": "2022-08-12T17:36:40.811Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Ÿőű'ľľ ľőνė Ȅľȁśťĩćŝėȁŕćĥ 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\"lowercase\", {\"type\": \"asciifolding\", \"preserve_original\": false}]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "44207d2e-16c4-4b00-92aa-dee9caeb32f0",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Ngram",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-12T17:46:33.417Z",
    "modified": "2022-08-12T17:56:21.839Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\"uppercase\", {\"type\": \"ngram\", \"min_gram\": 10, \"max_gram\": 10}]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "ebb4a4ea-ae2f-4f31-b34d-18e8695639bb",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Edge Ngram",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-12T17:56:32.438Z",
    "modified": "2022-08-12T17:58:15.729Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\"uppercase\", {\"type\": \"edge_ngram\", \"min_gram\": 10, \"max_gram\": 10}]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "02a41fb5-5a04-4070-8254-e38f9fa41c83",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Fingerprint",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-12T17:58:55.372Z",
    "modified": "2022-08-12T17:59:56.052Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\"fingerprint\"]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "79026984-15f4-4802-b4a4-b150ddd091fc",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Fingerprint Custom",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-12T18:08:07.500Z",
    "modified": "2022-08-12T18:09:00.303Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [{\"type\": \"fingerprint\", \"separator\": \";\" , \"max_output_size\": 255 }]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "abfad2da-a80f-4891-9dee-6d65989fe6dc",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Keep",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-12T18:10:54.522Z",
    "modified": "2022-08-12T18:40:04.370Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [{\"type\": \"keep\", \"keep_words\": [\"Elasticsearch\", \"love\"]}]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "7242769c-c042-4969-9399-cf15436f3626",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Keep Types",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 70000,
    "created": "2022-08-12T18:38:13.947Z",
    "modified": "2022-08-15T17:12:07.648Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [{\"type\": \"keep_types\", \"types\": [\"<NUM>\"]}]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "f4b1f050-ba35-4b99-831b-3aa783c4ad73",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Stemmer",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 80000,
    "created": "2022-08-15T17:13:01.552Z",
    "modified": "2022-08-15T17:25:03.127Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"love loves loved loving\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [{\"type\": \"stemmer\", \"name\": \"english\"}]\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "83b2fba7-1c99-40b2-a519-5c3f38ca5024",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Stop",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 90000,
    "created": "2022-08-15T17:25:57.646Z",
    "modified": "2022-08-15T17:51:07.024Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"A an The and Elasticsearch\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [{\"type\": \"stop\", \"stopwords\": [\"_english_\"], \"ignore_case\": true}]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "016d98b3-d341-48af-b739-45984780922a",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Unique",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 100000,
    "created": "2022-08-15T17:52:58.276Z",
    "modified": "2022-08-15T17:53:27.558Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"love loves Loved loving\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [{\"type\": \"stemmer\", \"name\": \"english\"}, \"lowercase\", \"unique\"]\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "186b9f97-0864-4d93-9424-56c8ca7d9408",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "Conditional",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 110000,
    "created": "2022-08-15T18:44:08.959Z",
    "modified": "2022-08-15T18:46:34.290Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll love Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"condition\",\n      \"script\": { \"source\": \"token.getType()=='<NUM>'\" },\n      \"filter\": [\"fingerprint\"]\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d3444f95-4691-4cc7-8b64-d6c417c900f0",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "fc71b022-c130-495e-983e-5a744b01c71a",
    "name": "Pattern",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-16T13:23:44.248Z",
    "modified": "2022-08-16T16:07:26.962Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"In Elasticsearch 7.0\",\n  \"analyzer\": \"pattern\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "8c9d259f-85fe-480a-b7e2-d57f95200b0e",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "GenerateWordParts",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-16T13:30:20.227Z",
    "modified": "2022-08-16T13:50:07.691Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"ElasticSearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"generate_word_parts\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "93c4f530-134b-4b55-a0e9-c3bb23e63b5c",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "GenerateNumberParts",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-16T13:47:00.163Z",
    "modified": "2022-08-16T13:50:49.367Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"ElasticSearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"generate_number_parts\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "89dd5433-7402-4163-8d44-b9a5db660eca",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "GenerateWordParts false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 15000,
    "created": "2022-08-16T13:48:10.611Z",
    "modified": "2022-08-16T13:49:59.426Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"ElasticSearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"generate_word_parts\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "559001e5-4279-4e23-ae81-02ec3429240b",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "GenerateNumberParts false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-16T13:50:38.311Z",
    "modified": "2022-08-16T13:50:38.311Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"ElasticSearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"generate_number_parts\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d677eff8-4523-40c8-b50f-4a718ec0248f",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "CatenateWords",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-16T13:52:41.382Z",
    "modified": "2022-08-16T13:53:25.891Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"catenate_words\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6190f232-74c2-499a-9856-6571a5803eec",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "CatenateWords false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-16T13:53:37.875Z",
    "modified": "2022-08-16T13:53:49.828Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"catenate_words\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d1fc76a9-25d7-4800-b5cf-0f1165aa8cad",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "CatenateNumbers",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-16T13:55:43.656Z",
    "modified": "2022-08-16T13:55:58.706Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"catenate_numbers\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "3e0a3ccf-0469-4456-a83c-0963b77f352c",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "CatenateNumbers false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 70000,
    "created": "2022-08-16T13:56:14.085Z",
    "modified": "2022-08-16T13:56:36.075Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n      \"catenate_numbers\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "9099f6a9-1981-4c7b-8296-361a7b06cf73",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "CatenateAll",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 80000,
    "created": "2022-08-16T13:58:31.659Z",
    "modified": "2022-08-16T13:58:53.121Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n     \"catenate_all\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6e9a2a1b-ca62-46b1-8153-3423d71dfece",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "CatenateAll false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 90000,
    "created": "2022-08-16T13:59:03.850Z",
    "modified": "2022-08-16T14:00:02.480Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n     \"catenate_all\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "2928454d-40e2-414c-846c-af1e2286b737",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "SplitOnCaseChange",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 100000,
    "created": "2022-08-16T14:12:00.790Z",
    "modified": "2022-08-16T14:15:54.734Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"ElasticSearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n     \"split_on_case_change\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "128b30d0-5c1c-4f43-a801-62427570a29c",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "SplitOnCaseChange false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 110000,
    "created": "2022-08-16T14:15:15.207Z",
    "modified": "2022-08-16T14:16:04.254Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"ElasticSearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n     \"split_on_case_change\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "61e60015-5566-4120-8c51-a1e7f267af5a",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "PreserveOriginal",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 120000,
    "created": "2022-08-16T14:19:04.128Z",
    "modified": "2022-08-16T14:19:16.581Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n\t  \"preserve_original\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "fdbd15ae-8c4a-4009-854f-7d1dd0cfc09b",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "PreserveOriginal false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 130000,
    "created": "2022-08-16T14:19:25.626Z",
    "modified": "2022-08-16T14:19:40.406Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elastic_Search 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n\t  \"preserve_original\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "84d9ead0-7fc2-4a7c-89fb-2f13147535e5",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "SplitOnNumerics",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 140000,
    "created": "2022-08-16T14:20:32.003Z",
    "modified": "2022-08-16T14:22:32.465Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"SN12X\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n\t  \"split_on_numerics\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "0357c942-90e6-493b-8e5d-e57487f92f8e",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "SplitOnNumerics false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 150000,
    "created": "2022-08-16T14:26:13.278Z",
    "modified": "2022-08-16T14:26:29.880Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"SN12X\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n\t  \"split_on_numerics\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "31604844-57c2-4548-b1c1-3e162eb0f767",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "StemEnglishPossessive",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 160000,
    "created": "2022-08-16T14:28:06.208Z",
    "modified": "2022-08-16T14:28:27.768Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch's analyzer\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n\t  \"stem_english_posessive\": true\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "01c07d43-e2a7-4c44-ac71-3b9d8f609653",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "d55390d7-dc1b-4258-95ce-9414214b4bb4",
    "name": "StemEnglishPossessive false",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 170000,
    "created": "2022-08-16T14:28:32.657Z",
    "modified": "2022-08-16T14:29:27.447Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"Elasticsearch's analyzer\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"word_delimiter\",\n\t  \"stem_english_posessive\": false\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "a98ff3fd-7d87-41bd-8be1-4e2bd7016948",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "9162278b-2a64-4dd2-8dc9-b3f5deb69f7a",
    "name": "PredicateTokenFilter Copy",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 130000,
    "created": "2022-08-16T16:06:50.961Z",
    "modified": "2022-08-16T16:06:50.961Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"You'll lover Elasticsearch 7.0\",\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"predicate_token_filter\",\n      \"script\": { \"source\": \"token.getType()=='<NUM>'\" }\n    }\n  ]\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "9e05877d-1a2f-4738-9dbd-71dbee70401d",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "fc71b022-c130-495e-983e-5a744b01c71a",
    "name": "Keyword",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-16T16:07:33.283Z",
    "modified": "2022-08-16T16:07:55.017Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"In Elasticsearch 7.0\",\n  \"analyzer\": \"keyword\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6c543889-fb74-41a0-a40a-a0853bb60be8",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "fc71b022-c130-495e-983e-5a744b01c71a",
    "name": "Stop",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-16T16:07:59.361Z",
    "modified": "2022-08-16T16:08:10.194Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"In Elasticsearch 7.0\",\n  \"analyzer\": \"stop\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "81b096cf-582b-4ddf-b13d-8d4ed7526d74",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "fc71b022-c130-495e-983e-5a744b01c71a",
    "name": "Whitespace",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-16T16:08:18.407Z",
    "modified": "2022-08-16T16:09:24.136Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"In Elasticsearch 7.0\",\n  \"analyzer\": \"whitespace\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "52be127e-3765-4a30-89e6-281486e7f970",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "fc71b022-c130-495e-983e-5a744b01c71a",
    "name": "Simple",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-16T16:10:09.065Z",
    "modified": "2022-08-16T16:10:23.249Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"In Elasticsearch 7.0\",\n  \"analyzer\": \"simple\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "f8930b67-8348-4098-9b3d-bf8d40b0790a",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "fc71b022-c130-495e-983e-5a744b01c71a",
    "name": "Standard",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-16T16:10:31.742Z",
    "modified": "2022-08-16T16:10:48.237Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"In Elasticsearch 7.0\",\n  \"analyzer\": \"standard\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "47a49494-6897-4fa7-bcbd-a53b89beb21c",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "0a0dec71-190c-4ecc-ba2d-425e40fa6b11",
    "name": "Create Index With Custom Analyzer",
    "url": "http://localhost:{{dockerPort}}/cf_etf_custom_analyzer",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-16T16:12:02.480Z",
    "modified": "2022-08-17T13:41:19.584Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"mappings\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"symbol\": { \"type\": \"keyword\" },\n      \"fund_name\": { \"type\": \"text\" },\n      \"rating\": { \"type\": \"byte\" },\n      \"morningstar_category\": { \"type\": \"keyword\" },\n      \"category\": { \"type\": \"keyword\" },\n      \"family\": { \"type\": \"keyword\" },\n      \"market_cap\": { \"type\": \"keyword\" },\n      \"description\": {\n        \"type\": \"text\",\n        \"fields\": { \"raw\": { \"type\": \"keyword\" } },\n        \"analyzer\": \"description_analyzer\",\n        \"search_analyzer\": \"description_analyzer\"\n      }\n    }\n  },\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"description_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"description_tokenizer\",\n          \"filter\": [\n            \"lowercase\",\n            \"description_pattern_replace_filter\",\n            \"description_stemmer_filter\",\n            \"description_stop_filter\",\n            \"description_length_filter\",\n            \"unique\"\n          ]\n        }\n      },\n\t  \"tokenizer\": {\n\t\t  \"description_tokenizer\": {\n\t\t\t  \"type\": \"char_group\",\n\t\t\t  \"tokenize_on_chars\": [\"whitespace\", \"digit\", \"symbol\", \"\\\\n\", \",\", \":\", \"!\", \"?\",\";\", \",\",\"_\", \"{\", \"[\", \"}\", \"]\", \"(\", \")\", \"\\\\\", \"\\/\", \"\\\"\" ]\n\t\t  }\n\t  },\n\t  \"filter\":{\n\t\t\t\"description_pattern_replace_filter\": {\"type\": \"pattern_replace\", \"pattern\": \"(\\\\w{2,})\\\\.\", \"replacement\": \"$1\" },\n\t\t\t\"description_stemmer_filter\":{\"type\": \"stemmer\", \"name\": \"light_english\"},\n\t\t\t\"description_stop_filter\": {\"type\": \"stop\", \"stopwords\": [\"_english_\"]},\n\t\t\t\"description_length_filter\":{\"type\": \"length\", \"min\": 2}\n\t  }\n    }\n  }\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "c8a629f9-241a-4584-8d52-9df16e0e34f9",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "0a0dec71-190c-4ecc-ba2d-425e40fa6b11",
    "name": "Analyze Against Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_custom_analyzer/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-17T13:41:26.933Z",
    "modified": "2022-08-17T13:43:59.994Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"The investment seeks to track the price and yield performance, before fees and expenses, of the Bloomberg Barclays U.S. Aggregate Enhanced Yield Index (the \\\\\\\"index\\\\\\\"). \\\\n The index is designed to broadly capture the U.S. investment grade, fixed income securities market while seeking to enhance yield within desired risk parameters and constraints. The fund is non-diversified.\",\n  \"analyzer\": \"description_analyzer\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "054cbe95-081a-4ecf-8405-269f325d7830",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "a660a8b1-5e0d-4832-9f67-6a75a3d79181",
    "name": "Create Index With Custom Normalizer",
    "url": "http://localhost:{{dockerPort}}/cf_etf_custom_norm",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-17T13:54:16.673Z",
    "modified": "2022-08-17T13:54:47.367Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\n  \"settings\": {\n    \"analysis\": {\n\t\t\"normalizer\": {\n\t\t\t\"lowercase_normalizer\": {\n\t\t\t\t\"type\": \"custom\",\n\t\t\t\t\"filter\": [\"lowercase\"]\n\t\t\t}\n\t\t}\n    }\n  }\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6ed144ee-9e68-4afd-ab00-4daa14966ec3",
    "colId": "c6d238d0-f14e-462a-9f5a-2023fca961f9",
    "containerId": "a660a8b1-5e0d-4832-9f67-6a75a3d79181",
    "name": "Analyze with Custom  Normalizer",
    "url": "http://localhost:{{dockerPort}}/cf_etf_custom_norm/_analyze",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-17T13:54:50.758Z",
    "modified": "2022-08-17T13:56:16.116Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"text\": \"The investment seeks to track the price and yield performance, before fees and expenses, of the Bloomberg Barclays U.S. Aggregate Enhanced Yield Index (the \\\\\\\"index\\\\\\\"). \\\\n The index is designed to broadly capture the U.S. investment grade, fixed income securities market while seeking to enhance yield within desired risk parameters and constraints. The fund is non-diversified.\",\n  \"normalizer\": \"lowercase_normalizer\"\n}\n",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "b2a60d94-e77e-42f1-9eb8-a56ce6b1de2f",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "2061d5c6-3c4c-4c41-8398-e97176609545",
    "name": "GetAllDocs",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-17T14:28:28.180Z",
    "modified": "2022-08-17T14:40:40.634Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "b733ce70-ab3b-4665-a609-8cbceec4f0cb",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "2061d5c6-3c4c-4c41-8398-e97176609545",
    "name": "GetAllDocsMultiIndexes",
    "url": "http://localhost:{{dockerPort}}/cf_etf,cf_view/_search",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-17T14:35:06.544Z",
    "modified": "2022-08-17T14:40:41.921Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "097797ed-b1bb-4b05-825e-5acb582e506d",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "2061d5c6-3c4c-4c41-8398-e97176609545",
    "name": "GetAllInCluster",
    "url": "http://localhost:{{dockerPort}}/_search",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-17T14:40:47.366Z",
    "modified": "2022-08-17T14:41:33.106Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "1132ee78-2d70-4bd0-b190-da0c24ec78c2",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "URLParams",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?from=2&size=2&sort=symbol:asc&_source=false",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-17T14:47:45.157Z",
    "modified": "2022-08-17T14:49:23.436Z",
    "headers": [],
    "params": [
      {
        "name": "from",
        "value": "2",
        "isPath": false
      },
      {
        "name": "size",
        "value": "2",
        "isPath": false
      },
      {
        "name": "sort",
        "value": "symbol:asc",
        "isPath": false
      },
      {
        "name": "_source",
        "value": "false",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "a2d7c8f2-0314-46d7-89ac-fdfbcdff020e",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "QueryDSL",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&default_operator=AND",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-17T14:57:11.576Z",
    "modified": "2022-08-17T14:57:57.702Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "default_operator",
        "value": "AND",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "cdb0552d-1042-4aaa-aaec-ef2c01f81886",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "QueryDSL Explain",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&default_operator=AND&explain=true",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-17T14:59:15.722Z",
    "modified": "2022-08-17T14:59:45.019Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "default_operator",
        "value": "AND",
        "isPath": false
      },
      {
        "name": "explain",
        "value": "true",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "0056c07e-dd2c-4cee-bb77-b645d5dc2757",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "QueryDSL Explain Analyzer",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&default_operator=AND&explain=true&analyzer=keyword",
    "method": "GET",
    "sortNum": 40000,
    "created": "2022-08-17T15:02:23.552Z",
    "modified": "2022-08-17T15:02:52.831Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "default_operator",
        "value": "AND",
        "isPath": false
      },
      {
        "name": "explain",
        "value": "true",
        "isPath": false
      },
      {
        "name": "analyzer",
        "value": "keyword",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "143f1a20-39d7-4faf-8cd5-170c78f6d57b",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "StoredFields",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&stored_fields=_none_",
    "method": "GET",
    "sortNum": 50000,
    "created": "2022-08-17T15:36:16.305Z",
    "modified": "2022-08-17T15:36:41.800Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "stored_fields",
        "value": "_none_",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "17641907-6204-4882-82d2-919ccfeb3041",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "AnalyzeWildcard",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&analyze_wildcard=true",
    "method": "GET",
    "sortNum": 60000,
    "created": "2022-08-17T15:39:27.814Z",
    "modified": "2022-08-17T15:40:05.425Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "analyze_wildcard",
        "value": "true",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "179601f1-eb2a-4c1b-b2b1-1daaec06df33",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "AllowPartialSearchResults",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&allow_partial_search_results=false",
    "method": "GET",
    "sortNum": 70000,
    "created": "2022-08-17T15:41:52.338Z",
    "modified": "2022-08-17T15:42:16.553Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "allow_partial_search_results",
        "value": "false",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "7e368604-04b1-4827-a8c3-a98c8989a41d",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "BatchedReduceSize",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&batched_reduce_size=5",
    "method": "GET",
    "sortNum": 80000,
    "created": "2022-08-17T15:42:23.793Z",
    "modified": "2022-08-17T15:42:58.922Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "batched_reduce_size",
        "value": "5",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "62451240-f7d2-40f2-ac09-9e8df826b5b4",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "DefaultField",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&df=fund_name",
    "method": "GET",
    "sortNum": 90000,
    "created": "2022-08-17T15:44:20.862Z",
    "modified": "2022-08-17T15:45:12.611Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "df",
        "value": "fund_name",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "f728ef3e-f581-49c2-b2c1-729181489fb0",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "Lenient",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&lenient=true",
    "method": "GET",
    "sortNum": 100000,
    "created": "2022-08-17T16:23:04.332Z",
    "modified": "2022-08-17T16:23:21.926Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "lenient",
        "value": "true",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "35d5ae4c-2b9c-4930-869f-7d418984c430",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "SearchTypeDfs",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&search_type=dfs_query_then_fetch",
    "method": "GET",
    "sortNum": 110000,
    "created": "2022-08-17T16:26:57.898Z",
    "modified": "2022-08-17T16:27:28.485Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "search_type",
        "value": "dfs_query_then_fetch",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "c6909cad-305f-4700-a997-d6ad0be40c44",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "Timeout",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&timeout=1ms",
    "method": "GET",
    "sortNum": 120000,
    "created": "2022-08-17T16:28:43.031Z",
    "modified": "2022-08-17T16:29:53.159Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "timeout",
        "value": "1ms",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "f912e284-059c-40f3-b9df-2795873c175d",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "TerminateAfter",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&terminate_after=5",
    "method": "GET",
    "sortNum": 130000,
    "created": "2022-08-17T16:31:29.704Z",
    "modified": "2022-08-17T16:31:45.328Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "terminate_after",
        "value": "5",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "ffeb4800-940c-4980-ad04-3e5e3ca6083c",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "TrackScores",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&sort=market_cap&track_scores=true",
    "method": "GET",
    "sortNum": 140000,
    "created": "2022-08-17T16:33:24.119Z",
    "modified": "2022-08-17T16:39:18.803Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "sort",
        "value": "market_cap",
        "isPath": false
      },
      {
        "name": "track_scores",
        "value": "true",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "7b3d6a2e-3bfe-4ca1-9077-fc07032f586e",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "d83502a9-f99f-42fa-aeab-6656660960dd",
    "name": "TrackTotalHits",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&sort=market_cap&track_total_hits=50",
    "method": "GET",
    "sortNum": 150000,
    "created": "2022-08-17T16:42:33.058Z",
    "modified": "2022-08-17T16:43:02.868Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "sort",
        "value": "market_cap",
        "isPath": false
      },
      {
        "name": "track_total_hits",
        "value": "50",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "4ccb1192-37f1-4f43-9520-313f68fde512",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "Pagination",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-17T17:34:09.779Z",
    "modified": "2022-08-17T17:42:07.927Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"from\": 2,\n\t\"size\":2,\n\t\"sort\": {\"symbol\":\"asc\"},\n\t\"_source\": false\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "5b7ec8c2-f2d9-43c1-aba9-859eabb9444e",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "QueryDSL",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "POST",
    "sortNum": 20000,
    "created": "2022-08-17T17:34:09.780Z",
    "modified": "2022-08-17T17:42:57.023Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"query\": {\n\t\t\"query_string\": {\n\t\t\t\"query\": \"fund_name:ishares edge global\",\n\t\t\t\"default_operator\": \"AND\"\n\t\t}\n\t}\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "f353e4a5-adae-42c0-8150-9fd60ef083ad",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "QueryDSL Explain",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&default_operator=AND&explain=true",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-08-17T17:34:09.781Z",
    "modified": "2022-08-17T17:45:25.485Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "default_operator",
        "value": "AND",
        "isPath": false
      },
      {
        "name": "explain",
        "value": "true",
        "isPath": false
      }
    ],
    "body": {
      "type": "json",
      "raw": "{\n\t\"query\": {\n\t\t\"query_string\": {\n\t\t\t\"query\": \"fund_name:ishares edge global\",\n\t\t\t\"default_operator\": \"AND\"\n\t\t}\n\t},\n\t\"explain\": true\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "cbc112ea-9fe6-4b51-b2ed-de32c361e96f",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "QueryDSL Explain Analyzer",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-17T17:34:09.782Z",
    "modified": "2022-08-17T18:01:44.444Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"query\": {\n\t\t\"query_string\": {\n\t\t\t\"query\": \"fund_name:ishares edge global\",\n\t\t\t\"default_operator\": \"AND\"\n\t\t}\n\t},\n\t\"explain\": true\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "6f398ca3-5d66-440a-9482-7123a3a5f637",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "StoredFields",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-17T17:34:09.783Z",
    "modified": "2022-08-17T18:31:19.525Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"query\": {\n\t\t\"query_string\": {\n\t\t\t\"query\": \"fund_name:ishares edge global\",\n\t\t\t\"default_operator\": \"AND\"\n\t\t}\n\t},\n\t\"stored_fields\": \"fund_name\"\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "97ddaed9-7b34-480f-b56f-33445b640b2b",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "AnalyzeWildcard",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-17T17:34:09.784Z",
    "modified": "2022-08-17T18:37:38.596Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"query\": {\n\t\t\"query_string\": {\n\t\t\t\"query\": \"fund_name:=* edge global\",\n\t\t\t\"default_operator\": \"AND\",\n\t\t\t\"analyze_wildcard\": false\n\t\t}\n\t}\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "0e1b0365-66c3-4aa2-a2bf-a57252169822",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "AllowPartialSearchResults",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&allow_partial_search_results=false",
    "method": "GET",
    "sortNum": 70000,
    "created": "2022-08-17T17:34:09.785Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "allow_partial_search_results",
        "value": "false",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "ae540bf6-b111-47c4-ac1d-7bdeea6f2a1e",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "BatchedReduceSize",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&batched_reduce_size=5",
    "method": "GET",
    "sortNum": 80000,
    "created": "2022-08-17T17:34:09.786Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "batched_reduce_size",
        "value": "5",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "28575369-5e7b-4857-9ada-2c0654115061",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "DefaultField",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&df=fund_name",
    "method": "GET",
    "sortNum": 90000,
    "created": "2022-08-17T17:34:09.787Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "df",
        "value": "fund_name",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "f7743a67-e116-4ab3-9fd4-1ba86d4eab30",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "Lenient",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&lenient=true",
    "method": "GET",
    "sortNum": 100000,
    "created": "2022-08-17T17:34:09.788Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "lenient",
        "value": "true",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "2c0a8dac-4028-4e86-87e9-7e02508f83d2",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "SearchTypeDfs",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:ishares edge global&search_type=dfs_query_then_fetch",
    "method": "GET",
    "sortNum": 110000,
    "created": "2022-08-17T17:34:09.789Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:ishares edge global",
        "isPath": false
      },
      {
        "name": "search_type",
        "value": "dfs_query_then_fetch",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "1104085e-fafd-41ce-a67f-7d92612d2cfb",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "Timeout",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&timeout=1ms",
    "method": "GET",
    "sortNum": 120000,
    "created": "2022-08-17T17:34:09.790Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "timeout",
        "value": "1ms",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "007dceeb-4317-4f92-975a-a2e47eb63b70",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "TerminateAfter",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&terminate_after=5",
    "method": "GET",
    "sortNum": 130000,
    "created": "2022-08-17T17:34:09.791Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "terminate_after",
        "value": "5",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "01b0bbfb-baf0-412e-b823-735680d1a71e",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "TrackScores",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&sort=market_cap&track_scores=true",
    "method": "GET",
    "sortNum": 140000,
    "created": "2022-08-17T17:34:09.792Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "sort",
        "value": "market_cap",
        "isPath": false
      },
      {
        "name": "track_scores",
        "value": "true",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "e45caef5-3923-46e0-8a9e-a26f7f7ba839",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "TrackTotalHits",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search?q=fund_name:edge global&sort=market_cap&track_total_hits=50",
    "method": "GET",
    "sortNum": 150000,
    "created": "2022-08-17T17:34:09.793Z",
    "modified": "2022-08-17T17:34:09.779Z",
    "headers": [],
    "params": [
      {
        "name": "q",
        "value": "fund_name:edge global",
        "isPath": false
      },
      {
        "name": "sort",
        "value": "market_cap",
        "isPath": false
      },
      {
        "name": "track_total_hits",
        "value": "50",
        "isPath": false
      }
    ],
    "tests": []
  },
  {
    "_id": "881a76a7-93b1-4d4b-8654-7b8d8ba994c5",
    "colId": "ecc76d6d-4739-4395-b9ce-ec14817bf72a",
    "containerId": "c31a2893-26e4-4a1b-997c-ade5da4f0205",
    "name": "Sort Alt",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_search",
    "method": "POST",
    "sortNum": 15000,
    "created": "2022-08-17T17:49:41.154Z",
    "modified": "2022-08-17T17:50:48.298Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n\t\"query\": {\n\t\t\"query_string\": {\n\t\t\t\"query\": \"fund_name:ishares edge global\",\n\t\t\t\"default_operator\": \"AND\"\n\t\t}\n\t},\n\t\"explain\": true,\n\t\"sort\": \"symbol\"\n}",
      "form": []
    },
    "tests": []
  }
]