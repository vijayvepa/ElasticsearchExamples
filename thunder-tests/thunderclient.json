[
  {
    "_id": "501b9da1-40f7-4b50-8f0a-2c9c098c26fe",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "CreateIndexValid",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-07-31T11:41:15.460Z",
    "modified": "2022-07-31T11:41:15.460Z",
    "headers": []
  },
  {
    "_id": "82341ae1-95f3-4a44-8a6e-31d3b6a45d8a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "CreateIndexInvalid",
    "url": "http://localhost:{{dockerPort}}/cf:etf",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-07-31T11:41:15.461Z",
    "modified": "2022-07-31T11:43:10.681Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "d53bb0b4-8820-41e4-9b72-4525bdd87b4f",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "a57dd921-d4d1-4281-9aa7-ac22eb4a2a4f",
    "name": "CreateDoc",
    "url": "http://localhost:62062/orgdb_orgs_v1-3/_create/goldNational2",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-07-31T11:41:15.462Z",
    "modified": "2022-08-01T12:16:22.746Z",
    "headers": [],
    "body": {
      "type": "json",
      "raw": "{\"name2\": \"Gold National\", \"active\": true, \"displayName\": \"Gold National\", \"excludeReferrals\": false, \"address\": { \"address\": \"123 Gold National Street\", \"address2\": \"Suite #1\", \"city\": \"Pittsburgh\", \"state\": \"PA\", \"postalCode\": \"12345\", \"country\": \"USA\"}, \"phone\": \"999-999-0001\", \"companyTypeId\": \"dme\"}"
    }
  },
  {
    "_id": "f743e9b8-028e-4e7f-8285-30cccd0b6ab2",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "a57dd921-d4d1-4281-9aa7-ac22eb4a2a4f",
    "name": "Template",
    "url": "http://localhost:62062/_template",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-07-31T11:41:15.463Z",
    "modified": "2022-08-01T12:16:24.019Z",
    "headers": []
  },
  {
    "_id": "67439584-ab3f-4435-b779-8216fce1361a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "a57dd921-d4d1-4281-9aa7-ac22eb4a2a4f",
    "name": "Analyze Text",
    "url": "http://localhost:{{dockerPort}}/_analyze",
    "method": "POST",
    "sortNum": 30000,
    "created": "2022-07-31T11:41:15.464Z",
    "modified": "2022-08-01T12:16:25.130Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"text\": \"You will love Elasticsearch 7.0\"}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "3a10a6ae-6821-4f7d-9d5f-f79d479eadd6",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "GetIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-07-31T11:50:42.949Z",
    "modified": "2022-07-31T11:55:04.360Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "1e3fc6c3-9c53-41c2-9e52-084e2c47b700",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "GetAllIndexes",
    "url": "http://localhost:{{dockerPort}}/_all",
    "method": "GET",
    "sortNum": 40000,
    "created": "2022-07-31T11:52:28.834Z",
    "modified": "2022-07-31T11:52:28.834Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "0be27339-c2a4-413a-a7b2-9c0b3d4588c1",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "GetIndexNotFound",
    "url": "http://localhost:{{dockerPort}}/cf:etf",
    "method": "GET",
    "sortNum": 35000,
    "created": "2022-07-31T11:55:59.516Z",
    "modified": "2022-07-31T11:56:23.310Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "c258d43e-e6b0-41d0-8cce-04eb33e45c88",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "DeleteIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "DELETE",
    "sortNum": 37500,
    "created": "2022-07-31T12:07:15.465Z",
    "modified": "2022-07-31T12:07:33.237Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "9d7fe34a-e367-4eab-afd9-d2c4e013ef63",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "CloseIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_close",
    "method": "POST",
    "sortNum": 38750,
    "created": "2022-07-31T12:13:38.179Z",
    "modified": "2022-07-31T12:14:42.607Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "1ec62c8b-934f-40fe-ae22-2d7061d816f0",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "b0423f61-0fbc-4923-ac90-2b79dbd48457",
    "name": "OpenIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_open",
    "method": "POST",
    "sortNum": 39375,
    "created": "2022-08-01T12:01:38.027Z",
    "modified": "2022-08-01T12:02:03.700Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "332e5dba-3404-4f0e-9c20-3c9e45fd5065",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "GetIndexSettings",
    "url": "http://localhost:{{dockerPort}}/cf_etf",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-01T12:08:02.207Z",
    "modified": "2022-08-01T12:08:06.724Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "773ac1d1-0a8d-4218-82c8-7da90c5b45ce",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "UpdateIndexSettings",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_settings",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T12:08:55.599Z",
    "modified": "2022-08-01T12:09:40.600Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"index\": {\n        \"number_of_replicas\": 2\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "dc9620d0-d1e9-400c-8841-f5993adfc429",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "UpdateIndexSettings (static)",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_settings",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-01T12:10:13.227Z",
    "modified": "2022-08-01T12:10:53.806Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"index\": {\n        \"codec\": \"best_compression\"\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "9d5b3b17-676d-4f0b-9533-594a13eb1e78",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "CloseIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_close",
    "method": "POST",
    "sortNum": 5000,
    "created": "2022-08-01T12:11:09.484Z",
    "modified": "2022-08-01T12:11:34.829Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "747ee8f7-20a7-4aad-93d9-f9ead1cae304",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "15b3869a-750f-4216-92a9-94b134343e3e",
    "name": "OpenIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_open",
    "method": "POST",
    "sortNum": 2500,
    "created": "2022-08-01T12:11:44.008Z",
    "modified": "2022-08-01T12:11:45.910Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "dd65ab13-1c0d-451b-8bff-422a4cbdc317",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "GetAllIndexTemplates",
    "url": "http://localhost:{{dockerPort}}/_template",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-01T12:16:48.181Z",
    "modified": "2022-08-01T12:19:50.393Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "c7db8525-4800-47f1-b179-1c1d540a9106",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "CreateIndexTemplate",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T12:19:24.362Z",
    "modified": "2022-08-01T12:19:24.362Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"index_patterns\": [\"cf_etf*\"],\n    \"settings\": {\n        \"number_of_replicas\": \"2\",\n        \"codec\": \"best_compression\"\n    }\n}",
      "form": []
    },
    "tests": []
  },
  {
    "_id": "d2df9ad8-3cec-4bd5-bc2e-9bc0ac84ba80",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "GetIndexTemplate",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-01T12:20:49.659Z",
    "modified": "2022-08-01T12:21:27.793Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "93840721-d70e-44fe-bf06-97adb1924126",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "CheckIndexTemplateExists",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "HEAD",
    "sortNum": 40000,
    "created": "2022-08-01T12:21:45.187Z",
    "modified": "2022-08-01T12:21:59.515Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "bd6f9280-1d18-4846-ab44-71c200fdcfbd",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "DeleteIndexTemplate",
    "url": "http://localhost:{{dockerPort}}/_template/cf_etf_template",
    "method": "DELETE",
    "sortNum": 35000,
    "created": "2022-08-01T12:22:29.343Z",
    "modified": "2022-08-01T12:22:41.995Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "c9ea9143-a430-4dba-933c-3eeb17515b37",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "CreateIndexUsingTemplate",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "PUT",
    "sortNum": 25000,
    "created": "2022-08-01T12:24:14.753Z",
    "modified": "2022-08-01T12:25:50.272Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "e0a14c95-5abf-4656-8a19-9076634c74bb",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "GetIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "GET",
    "sortNum": 27500,
    "created": "2022-08-01T12:31:16.005Z",
    "modified": "2022-08-01T12:31:29.217Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "ced0f237-2193-4681-b1f3-df67cb7d4229",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "ba2a245d-d64e-4846-a9ff-bb9105fc7cb8",
    "name": "DeleteIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "DELETE",
    "sortNum": 28750,
    "created": "2022-08-01T12:31:52.096Z",
    "modified": "2022-08-01T12:32:08.625Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "7947be38-f031-4797-9632-2651fdaaa5f7",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "CreateIndexAlias",
    "url": "http://localhost:{{dockerPort}}/cf_etf*/_alias/cf_etf_1",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-01T12:38:02.171Z",
    "modified": "2022-08-01T12:42:03.182Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "Create an alternative name for an index or multiple indices.\n\n- The syntax of the index (that is, cf_etf) can be `*` | `_all` | glob pattern | name1, name2, and so on. \n- This means that a single alias can reference multiple indices."
  },
  {
    "_id": "eca6acf5-d0a9-4317-b9bb-6a7ede40bd5d",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "GetAllIndexAliases",
    "url": "http://localhost:{{dockerPort}}/_alias",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-01T12:41:42.225Z",
    "modified": "2022-08-01T12:43:23.949Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "This API allows you to retrieve information from the alternative name of the index"
  },
  {
    "_id": "80b42d03-e77c-4aef-a4b6-9f075a41dd21",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "CheckIndexAlias",
    "url": "http://localhost:{{dockerPort}}/cf_etf/_alias/cf_etf_1",
    "method": "HEAD",
    "sortNum": 30000,
    "created": "2022-08-01T12:44:30.932Z",
    "modified": "2022-08-01T12:50:17.158Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": " Use HEAD/cf_etf/_alias/cf_etf_1 to check whether the index alias, cf_etf_1, exists.\n- The syntax of the term (cf_etf) and the term (cf_etf_1) can be any of `*` | `_all` | glob pattern | name1, name2, and so on"
  },
  {
    "_id": "3a06619c-99aa-4e0c-87e9-dbaddc73fe81",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "DeleteIndexAlias",
    "url": "http://localhost:{{dockerPort}}/cf_etf*/_alias/cf_etf_1",
    "method": "DELETE",
    "sortNum": 40000,
    "created": "2022-08-01T12:46:10.632Z",
    "modified": "2022-08-01T12:46:48.916Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "This API allows you to retrieve information from the alternative name of the index"
  },
  {
    "_id": "570c1054-b331-40c1-acc9-2c10246241a2",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "GetIndexAlias",
    "url": "http://localhost:{{dockerPort}}/_alias/cf_etf_1",
    "method": "GET",
    "sortNum": 35000,
    "created": "2022-08-01T12:47:34.861Z",
    "modified": "2022-08-01T12:47:34.861Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "This API allows you to retrieve information from the alternative name of the index"
  },
  {
    "_id": "76259355-1986-4c81-95aa-1c58e48f8d12",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "AliasesActions",
    "url": "http://localhost:{{dockerPort}}/_aliases",
    "method": "POST",
    "sortNum": 15000,
    "created": "2022-08-01T12:50:38.937Z",
    "modified": "2022-08-01T12:56:37.602Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"cf_etf\",\n        \"alias\": \"cf_etf_2\"\n      }\n    },\n    {\n      \"remove\": {\n        \"index\": \"cf_etf\",\n        \"alias\": \"cf_etf_1\"\n      }\n    },\n    {\n      \"remove_index\": {\n        \"index\": \"cf_etf_to_be_deleted\"\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "5b3c2b47-7766-466e-b719-707cbf8a9773",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "7fa13fdc-a1e8-4569-8b03-f2735bd0b148",
    "name": "CreateIndex",
    "url": "http://localhost:{{dockerPort}}/cf_etf_to_be_deleted",
    "method": "PUT",
    "sortNum": 17500,
    "created": "2022-08-01T12:51:23.083Z",
    "modified": "2022-08-01T12:52:51.274Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "b1cf7828-58c5-405d-90b1-0434b88f5c67",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "44e93342-59d3-45b6-8a37-3a74fd7e9e51",
    "name": "ReIndexing",
    "url": "http://localhost:{{dockerPort}}/_aliases",
    "method": "POST",
    "sortNum": 10000,
    "created": "2022-08-01T12:57:52.745Z",
    "modified": "2022-08-01T13:24:59.935Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"actions\": [\n    {\n      \"remove\": {\n        \"index\": \"cf_etf\",\n        \"alias\": \"cf_etf_production\"\n      }\n    },\n    {\n      \"add\": {\n        \"index\": \"cf_etf_new\",\n        \"alias\": \"cf_etf_production\"\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "1b4d396e-084a-4e5e-86e2-54bb35aed013",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create cf_etf_large Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_large",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-01T13:05:33.597Z",
    "modified": "2022-08-01T13:06:55.990Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "6b15a7b4-4781-4bfe-a0a3-071af266c7a9",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create cf_etf_mid Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_mid",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T13:07:00.910Z",
    "modified": "2022-08-01T13:07:42.877Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "e2784571-a55b-480a-80a4-8514152f99fe",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create cf_etf_others Index",
    "url": "http://localhost:{{dockerPort}}/cf_etf_others",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-01T13:07:47.835Z",
    "modified": "2022-08-01T13:08:26.583Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "e8a2f293-5437-4534-8e0e-0944fc277a8a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "Create Alias",
    "url": "http://localhost:{{dockerPort}}/cf_*/_alias/cf_etf_alias",
    "method": "PUT",
    "sortNum": 40000,
    "created": "2022-08-01T13:16:28.813Z",
    "modified": "2022-08-01T13:23:03.058Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "Too many documents under the index may degrade search performance.\n\n If most queries are based on the same field of the index, such as category, class, and type, then you can logically group data by that field. \n\nLet's assume that there is a category field in the documents. \n- There are four categories, which are large, mid, small, and others. \n- If the documents can be evenly divided into each category, we can create four indices based on the category to index the documents. \n- Then, we can create an alias called cf_etf_alias to contain all four indices. \n\nIf you want to search for records from **all categories**, just use the index alias, `cf_etf_alias`. The following steps are used to create the index alias for all four indices."
  },
  {
    "_id": "08025996-9c8e-47d3-ae53-9aea4663535a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "1ab78bbd-49e8-4a45-9fa9-545f52079d72",
    "name": "GetAlias",
    "url": "http://localhost:{{dockerPort}}/_alias/cf_etf_alias",
    "method": "GET",
    "sortNum": 50000,
    "created": "2022-08-01T13:17:29.127Z",
    "modified": "2022-08-01T13:17:48.907Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Aliases Action API\n\n_aliases can perform multiple operations on an index/indices as an atomic operation. Supported actions include add, remove, and remove_index. Let's create a dummy index, cf_etf_to_be_deleted, by using the Index Create API\n\nThen, we can issue an aliases API with three actions:\n\n- Add a new alias named cf_etf_2 to the index named cf_etf.\n- Delete the alias named cf_etf_1.\n- Delete the dummy index, cf_etf_to_be_deleted, as shown in the request body:"
  },
  {
    "_id": "3d8880ec-f9b5-4f4b-af4b-111491bb9e7e",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "CreateIndex",
    "url": "http://localhost:{{dockerPort}}/cf_view",
    "method": "PUT",
    "sortNum": 10000,
    "created": "2022-08-01T13:36:20.410Z",
    "modified": "2022-08-01T13:45:22.685Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n    \"mappings\": {\n        \"properties\": {\n            \"symbol\": {\"type\": \"keyword\"},\n            \"category\": {\"type\": \"keyword\"}\n        }\n    }\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "698fd078-5e3b-4c91-a663-31e7eb46685a",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "Index Documents 1",
    "url": "http://localhost:{{dockerPort}}/cf_view/_doc/1",
    "method": "PUT",
    "sortNum": 20000,
    "created": "2022-08-01T13:45:26.475Z",
    "modified": "2022-08-01T13:47:59.994Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"symbol\": \"ACWF\", \"category\": \"Equity\"}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "38e950c2-3879-4fd8-8080-a93b4209923d",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "Index Documents 2",
    "url": "http://localhost:{{dockerPort}}/cf_view/_doc/2",
    "method": "PUT",
    "sortNum": 30000,
    "created": "2022-08-01T13:48:16.467Z",
    "modified": "2022-08-01T13:49:00.002Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\"symbol\": \"ACWI\", \"category\": \"International\"}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "03e1d864-c6f4-48de-8e2e-f77d65ca6ced",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "CreateFilteredAlias",
    "url": "http://localhost:{{dockerPort}}/_aliases",
    "method": "POST",
    "sortNum": 40000,
    "created": "2022-08-01T13:49:13.866Z",
    "modified": "2022-08-01T13:53:00.972Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"cf_view\",\n        \"alias\": \"cf_view_international\",\n        \"filter\": {\n          \"term\": {\n            \"category\": \"International\"\n          }\n        }\n      }\n    }\n  ]\n}",
      "form": []
    },
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "42761fa8-5b5c-4c9b-acaa-6d0bf61a4875",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "QueryAlias",
    "url": "http://localhost:{{dockerPort}}/cf_view_international/_search",
    "method": "POST",
    "sortNum": 50000,
    "created": "2022-08-01T13:53:23.071Z",
    "modified": "2022-08-01T14:03:03.773Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "21d85031-59bb-48ce-a58a-34b8d4d7bc8e",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "d579a34a-77a3-4af5-82d2-3483bbd00866",
    "name": "QueryIndex",
    "url": "http://localhost:{{dockerPort}}/cf_view/_search",
    "method": "POST",
    "sortNum": 60000,
    "created": "2022-08-01T14:05:18.964Z",
    "modified": "2022-08-01T14:05:37.570Z",
    "headers": [],
    "params": [],
    "tests": [],
    "docs": "# Reindexing\n\nIt is recommended to use aliases instead of indices in production. Since your current index design may not be perfect, you'll need to reindex later. For example, some fields of the documents have changed. By using an alias, you can transparently switch your application from using the old index to the new index without downtime. \n\nSuppose you use the index alias cf_etf_production, instead of the cf_etf index in your application. You successfully re-index the data from cf_etf to the new index, cf_etf_new. Then, you delete the alias from the old index and create the same alias for the new index. The index that's used in the application is switched."
  },
  {
    "_id": "1d9d7c5e-0b51-42e1-b94a-c96ed7cf8ffe",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexStats",
    "url": "http://localhost:{{dockerPort}}/cf_view/_stats",
    "method": "GET",
    "sortNum": 10000,
    "created": "2022-08-01T14:49:03.716Z",
    "modified": "2022-08-01T14:49:45.495Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "a1a28422-5472-4422-9c73-b10e92438b60",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexSegments",
    "url": "http://localhost:{{dockerPort}}/cf_view/_segments",
    "method": "GET",
    "sortNum": 20000,
    "created": "2022-08-01T15:48:32.783Z",
    "modified": "2022-08-01T15:48:55.743Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "7730c16e-8362-4b6b-9e9f-22e069d07152",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexRecovery",
    "url": "http://localhost:{{dockerPort}}/cf_view/_recovery",
    "method": "GET",
    "sortNum": 30000,
    "created": "2022-08-01T15:49:07.348Z",
    "modified": "2022-08-01T15:49:24.681Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "5b64b13d-8e1c-4258-be27-a1b5f99a5ec5",
    "colId": "55b3fb6e-6933-4320-a69f-1d3fd244fe97",
    "containerId": "f4819660-a73d-4bdd-a80e-e597da400832",
    "name": "IndexShardStores",
    "url": "http://localhost:{{dockerPort}}/cf_view/_shard_stores",
    "method": "GET",
    "sortNum": 40000,
    "created": "2022-08-01T15:49:30.920Z",
    "modified": "2022-08-01T15:49:56.331Z",
    "headers": [],
    "params": [],
    "tests": []
  }
]